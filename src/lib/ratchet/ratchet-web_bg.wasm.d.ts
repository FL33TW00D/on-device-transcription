/* tslint:disable */
/* eslint-disable */
export const memory: WebAssembly.Memory;
export function __wbg_modelkey_free(a: number): void;
export function modelkey_new(a: number, b: number, c: number, d: number): number;
export function modelkey_repo_id(a: number, b: number): void;
export function modelkey_model_id(a: number, b: number): void;
export function __wbg_model_free(a: number): void;
export function model_load(a: number, b: number, c: number): number;
export function model_run(a: number, b: number): number;
export function __wbg_decodingoptions_free(a: number): void;
export function __wbg_decodingoptionsbuilder_free(a: number): void;
export function decodingoptionsbuilder_new(): number;
export function decodingoptionsbuilder_setTask(a: number, b: number): number;
export function decodingoptionsbuilder_setLanguage(a: number, b: number, c: number): number;
export function decodingoptionsbuilder_setTemperature(a: number, b: number): number;
export function decodingoptionsbuilder_setSampleLen(a: number, b: number): number;
export function decodingoptionsbuilder_setBestOf(a: number, b: number): number;
export function decodingoptionsbuilder_setBeamSize(a: number, b: number): number;
export function decodingoptionsbuilder_setPatience(a: number, b: number): number;
export function decodingoptionsbuilder_setLengthPenalty(a: number, b: number): number;
export function decodingoptionsbuilder_setPrompt(a: number, b: number, c: number): number;
export function decodingoptionsbuilder_setPrefix(a: number, b: number, c: number): number;
export function decodingoptionsbuilder_setSuppressTokens(a: number, b: number, c: number): number;
export function decodingoptionsbuilder_setSuppressBlank(a: number, b: number): number;
export function decodingoptionsbuilder_setWithoutTimestamps(a: number, b: number): number;
export function decodingoptionsbuilder_setMaxInitialTimestamp(a: number, b: number): number;
export function decodingoptionsbuilder_setTimeOffset(a: number, b: number): number;
export function decodingoptionsbuilder_build(a: number): number;
export function __wbg_segment_free(a: number): void;
export function __wbg_get_segment_start(a: number): number;
export function __wbg_set_segment_start(a: number, b: number): void;
export function __wbg_get_segment_stop(a: number): number;
export function __wbg_set_segment_stop(a: number, b: number): void;
export function __wbg_get_segment_text(a: number, b: number): void;
export function __wbg_set_segment_text(a: number, b: number, c: number): void;
export function __wbg_get_segment_last(a: number): number;
export function __wbg_set_segment_last(a: number, b: number): void;
export function streamedsegment_start(a: number): number;
export function streamedsegment_stop(a: number): number;
export function streamedsegment_text(a: number, b: number): void;
export function streamedsegment_last(a: number): number;
export function start(): void;
export function apibuilder_from_hf(a: number, b: number, c: number): number;
export function apibuilder_endpoint(a: number, b: number, c: number, d: number): void;
export function apibuilder_from_hf_with_revision(a: number, b: number, c: number, d: number): number;
export function apibuilder_from_custom(a: number, b: number): number;
export function apibuilder_build(a: number): number;
export function __wbg_api_free(a: number): void;
export function api_get_with_progress(a: number, b: number, c: number, d: number): number;
export function api_get(a: number, b: number, c: number): number;
export function api_fetch_gguf_header(a: number, b: number, c: number): number;
export function api_fetch_range(a: number, b: number, c: number, d: number, e: number): number;
export function __wbg_apibuilder_free(a: number): void;
export function __wbindgen_malloc(a: number, b: number): number;
export function __wbindgen_realloc(a: number, b: number, c: number, d: number): number;
export const __wbindgen_export_2: WebAssembly.Table;
export function __wbindgen_add_to_stack_pointer(a: number): number;
export function _dyn_core__ops__function__FnMut__A____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__hf2ab65e2bc950203(a: number, b: number, c: number, d: number): void;
export function _dyn_core__ops__function__FnMut__A____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__h0236cf867c1050f0(a: number, b: number, c: number): void;
export function _dyn_core__ops__function__FnMut__A____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__h579532716f9363bb(a: number, b: number, c: number): void;
export function _dyn_core__ops__function__Fn__A____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__hbe5f1c89510ca5d4(a: number, b: number, c: number): void;
export function _dyn_core__ops__function__Fn_____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__h6e93e98a9e859e28(a: number, b: number): void;
export function __wbindgen_free(a: number, b: number, c: number): void;
export function __wbindgen_exn_store(a: number): void;
export function wasm_bindgen__convert__closures__invoke2_mut__h5b75e9fc588da642(a: number, b: number, c: number, d: number): void;
export function __wbindgen_start(): void;
